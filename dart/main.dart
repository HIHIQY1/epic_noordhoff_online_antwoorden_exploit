import 'dart:convert';
import "dart:io";
import 'package:pdf/pdf.dart';
import 'package:pdf/widgets.dart' as pw;
import "package:html/parser.dart" as html;

// doe gwn "dart main.dart ./saus.json" ofzpo je weet vast wel hoe je de json kan verkrijgen lol
void main(List<String> args) {
  print("[" + DateTime.now().toString() + "] Start");
  List<String> headPieceCodes = [];
  List<String> assignmentCodes = [];
  final pdf = pw.Document();
  if (args.length > 0) {
    //for (int i = 0; i < args.length; i++) {
    if (args.every((element) => File(element).existsSync())) {
      pdf.addPage(
        pw.MultiPage(
          pageFormat: PdfPageFormat.a4,
          build: (pw.Context context) {
            List<pw.Widget> allWidgets = [];
            //if (i == 0) {
            allWidgets.add(
              pw.Container(
                child: pw.Padding(
                  child: pw.Text(
                    "Noot: dit is een experimentele manier om antwoorden te verkrijgen uit de online methode! Niet alle antwoorden zijn copy-paste-ready, dus let op wat je kopiÃ«ert!",
                  ),
                  padding: pw.EdgeInsets.all(5),
                ),
                decoration: pw.BoxDecoration(
                  border: pw.BoxBorder(
                    left: true,
                    color: PdfColor.fromInt(0xff6a00),
                    width: 2,
                  ),
                  color: PdfColor.fromInt(0xffd599),
                ),
              ),
            );
            //}
            for (int i = 0; i < args.length; i++) {
              var dater = json.decode(File(args[i]).readAsStringSync());
              headPieceCodes.add(dater["info"]["hoofdstukKort"]);
              assignmentCodes.add(dater["info"]["opdrachtKort"]);
              allWidgets.addAll(headingElements(dater["info"]));
              allWidgets.addAll(answerList(dater["opdrachten"]));
            }
            allWidgets.add(
              pw.Container(
                child: pw.Column(children: [
                  pw.Row(children: <pw.Widget>[
                    pw.Text("Antwoorden binnengehaald met een script gemaakt door ", style: footerStyle()),
                    pw.UrlLink(
                      child: pw.Text("Qy", style: footerStyle(isLink: true)),
                      destination: "https://github.com/HIHIQY1",
                    ),
                    pw.Text(" en ", style: footerStyle()),
                    pw.UrlLink(
                      child: pw.Text("Sting A.", style: footerStyle(isLink: true)),
                      destination: "https://github.com/stingalleman",
                    ),
                  ]),
                  pw.Row(children: <pw.Widget>[
                    pw.Text("PDF gegenereerd met een script gemaakt door ", style: footerStyle()),
                    pw.UrlLink(
                      child: pw.Text("Qy", style: footerStyle(isLink: true)),
                      destination: "https://github.com/HIHIQY1",
                    ),
                  ]),
                  pw.Row(children: <pw.Widget>[
                    pw.UrlLink(
                      child: pw.Text("Broncode", style: footerStyle(isLink: true)),
                      destination: "https://github.com/HIHIQY1/epic_noordhoff_online_antwoorden_exploit",
                    ),
                  ]),
                ]),
                color: PdfColor.fromInt(0xf2f2f2),
                margin: pw.EdgeInsets.only(top: 30),
                padding: pw.EdgeInsets.all(5),
              ),
            );
            return allWidgets;
          },
          margin: pw.EdgeInsets.all(20),
        ),
      );
    } else {
      print("[" + DateTime.now().toString() + "] Some file didn't exist. Check your sources!");
      //print("file " + args[i] + " does not exist");
    }
    //}
    print("[" + DateTime.now().toString() + "] Built page. saving...");

    File("./" + headPieceCodes.toSet().toList().join(",") + " opdr " + assignmentCodes.join(",") + ".pdf")
        .writeAsBytesSync(pdf.save());
    print("[" + DateTime.now().toString() + "] Saved");
  } else {
    print("[" + DateTime.now().toString() + "] 0 files input! Add a path to a file as argument.");
  }
}

List<pw.Widget> headingElements(dynamic headerData) {
  List<pw.Widget> lijst = [];
  lijst.add(
    pw.Divider(
      height: 20,
      color: PdfColor.fromInt(0x0),
    ),
  );
  lijst.add(
    pw.Header(
      text: "Antwoorden voor opdracht " + headerData["opdrachtKort"],
      textStyle: pw.TextStyle(
        fontWeight: pw.FontWeight.bold,
        fontSize: 20,
      ),
      decoration: pw.BoxDecoration(
        border: pw.BoxBorder(
          bottom: false,
        ),
      ),
      margin: pw.EdgeInsets.all(0),
    ),
  );
  lijst.add(
    pw.Container(
      child: pw.Text(
        "Hoofdstukcode: " + headerData["hoofdstukKort"],
      ),
      margin: pw.EdgeInsets.only(bottom: 10),
    ),
  );
  return lijst;
}

List<pw.Widget> answerList(dynamic answerData) {
  List<pw.Widget> lijst = [];

  for (int i = 0; i < answerData.length; i++) {
    //lijst.add(pw.Header(text: "Antwoord op vraag " + (i + 1).toString()));
    List<pw.Widget> contenerLijst = [];
    contenerLijst.add(
      pw.Header(
        text: "Antwoord op vraag " + (answerData[i]["i"] + 1).toString(),
        textStyle: pw.TextStyle(
          fontWeight: pw.FontWeight.bold,
          fontSize: 12,
        ),
        decoration: pw.BoxDecoration(
          border: pw.BoxBorder(
            bottom: false,
          ),
        ),
        margin: pw.EdgeInsets.all(0),
        padding: pw.EdgeInsets.all(0),
      ),
    );
    contenerLijst.add(
      pw.Container(
        child: pw.Text(
          "Type vraag: " + answerData[i]["type"],
          textAlign: pw.TextAlign.left,
        ),
      ),
    );
    if (answerData[i]["type"] != "onbekend") {
      contenerLijst.add(
        pw.Container(
          margin: pw.EdgeInsets.only(top: 2),
          //child: pw.DecoratedBox(
          child: pw.ListView(
            children: [
              pw.Padding(
                padding: pw.EdgeInsets.all(5),
                child: pw.Text(sanitizeAntwoord(answerData[i]["antw"])),
              ),
            ],
          ),
          //),
          decoration: pw.BoxDecoration(
            border: pw.BoxBorder(
              left: true,
              color: PdfColor.fromInt(0x00de00),
              width: 2,
            ),
            color: PdfColor.fromInt(0xf2f2f2),
          ),
        ),
      );
    } else {
      contenerLijst.add(
        pw.Text(
          "Deze vraag heeft geen ondersteund antwoordtype. Sorry :(",
          textAlign: pw.TextAlign.left,
        ),
      );
    }
    lijst.add(
      pw.Container(
        child: pw.Flex(
          children: contenerLijst,
          direction: pw.Axis.vertical,
          crossAxisAlignment: pw.CrossAxisAlignment.start,
        ),
        margin: pw.EdgeInsets.only(top: 15, bottom: 15),
      ),
    );
  }

  return lijst;
}

String sanitizeAntwoord(String antwoord) {
  var htmldoc = html.parseFragment(antwoord);
  return htmldoc.text;
}

// haha snapje want deze code staat onderaan de pagina
pw.TextStyle footerStyle({isLink: false}) {
  return pw.TextStyle(
      fontSize: 8,
      color: isLink ? PdfColor(0, 0, 255) : PdfColor(0, 0, 0),
      decoration: isLink ? pw.TextDecoration.underline : pw.TextDecoration.none);
}
