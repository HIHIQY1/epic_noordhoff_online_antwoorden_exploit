// weet je niet hoe het werkt? zie https://github.com/HIHIQY1/epic_noordhoff_online_antwoorden_exploit/blob/master/README.md

var editedLink = document.querySelector("main.content-layout object").getAttribute("data").replace("page.html", "content.xml");
var letterlijkDeOpdracht = { info: {} };
var vragenAntwoorden = [];
fetch(editedLink).then(res => res.text()).then(resText => {
    let parseur = new DOMParser();
    let docc = parseur.parseFromString(resText, "text/xml");
    let vragenElementen = Array.from(docc.querySelectorAll("learningobject configuration data interactionContainer"));
    vragenElementen.forEach((vraag, i) => {
        if (vraag.querySelector("multipleChoiceContainer") != null) {
            let answElements = Array.from(vraag.querySelectorAll("multipleChoiceContainer clickableItem lexicalUnit[isCorrect=\"true\"]"));
            let finalAnswers = answElements.map(el => el.textContent);
            console.info("%cVraag " + (i + 1) + " is MC." +  "%c - Antwoord: \"" + finalAnswers.join("],[") + "\"", "font-weight: bold","font-style: ");
            vragenAntwoorden.push({ i: i, antw: "[" + finalAnswers.join("],[") + "]", type: "multiple choice vraag" });
        } else if (vraag.querySelector("textEntryInteraction") != null) {
            let finalAnswers = [];
            Array.from(vraag.querySelectorAll("textEntryItem textEntryInput correctAnswer")).forEach(correcc => { finalAnswers.push(correcc.textContent); });
            console.info("%cVraag " + (i + 1) + " is een invulvraag." + "%c - Antwoorden: \"" + finalAnswers.join("\",\"") + "\"", "font-weight: bold","font-style: ");
            vragenAntwoorden.push({ i: i, antw: "[" + finalAnswers.join("],[") + "]", type: "invulvraag" });
        } else if (vraag.querySelector("connectingItemsInteraction") != null) {
            let connectionRows = Array.from(vraag.querySelectorAll("connectingItemsInteraction connectingItemsContainer combinationRow"));
            let finalAnswers = [];
            connectionRows.forEach(connecc => {
                let blox = connecc.querySelectorAll("connectingElement");
                finalAnswers.push("[" + blox[0].textContent + "]  -->  [" + blox[1].textContent + "]");
            });
            console.info("%cVraag " + (i + 1) + " is een verbindvraag." + "%c - Antwoorden: \n\"" + finalAnswers.join("\n") + "\"", "font-weight: bold","font-style: ");
            vragenAntwoorden.push({ i: i, antw: finalAnswers.join("\n"), type: "verbindvraag" });
        } else if (vraag.querySelector("multipleToggleInteraction") != null) {
            let finalAnswers = [];
            Array.from(vraag.querySelectorAll("toggleItem lexicalUnit[isCorrect=\"true\"]")).forEach(correcc => {
                finalAnswers.push(correcc.textContent);
            });
            console.info("%cVraag " + (i + 1) + " is een keuzevraag vraag." + "%c - Antwoord "/"" + finalAnswers.join("\",\"") + "\"", "font-weight: bold","font-style: ");
            vragenAntwoorden.push({
                i: i,
                antw: finalAnswers.join("\",\""),
                type: "keuzevraag"
            });
        } else if (vraag.querySelector("dropdownInteraction") != null) {
            let finalAnswers = [];
            Array.from(vraag.querySelectorAll("dropdownItem dropdownBox dropOption[isCorrect=\"true\"]")).forEach(correcc => {
                finalAnswers.push(correcc.textContent);
            });
            console.info("%cVraag " + (i + 1) + " is een dropdown vraag." + "%c - Antwoord: \"" + finalAnswers.join("\",\"") + "\"", "font-weight: bold","font-style: ");
            vragenAntwoorden.push({
                i: i,
                antw: finalAnswers.join("\",\""),
                type: "dropdownvraag"
            });
        } else {
            let antwElement = vraag.querySelector("openQuestionInteraction answer selfScoreFeedback");
            if (antwElement != null) {
                console.info("%cVraag " + (i + 1) + " is open vraag." + "%c - Antwoord: \"" + antwElement.textContent + "\"", "font-weight: bold","font-style: ");
                vragenAntwoorden.push({ i: i, antw: antwElement.textContent, type: "open vraag" });
            } else {
                console.info("%cVraag " + (i + 1) + " heeft geen ondersteund type. sorry :(", "font-weight: bold; color: red;");
                vragenAntwoorden.push({ i: i, type: "onbekend" });
            }
        }
    });
    letterlijkDeOpdracht.info.hoofdstukKort = docc.querySelector("learningobject configuration data screenmetadata name").textContent;
    letterlijkDeOpdracht.info.opdrachtKort = docc.querySelector("learningobject configuration data screenmetadata shortTitle").textContent;
    letterlijkDeOpdracht.opdrachten = vragenAntwoorden;
    //console.info(JSON.stringify(letterlijkDeOpdracht)); // je kan deze allicht uncommenten als je de opdrachtjson ergens voor nodig hebt :O
});
