// ya deze skript werkt dus alleen op de opdrachtpagina jwz

var editedLink = JSON.parse(document.querySelector("il-organism-content-player-wrapper").getAttribute("content")).uri.replace("page.html", "content.xml");
var letterlijkDeOpdracht = { info: {} };
var vragenAntwoorden = [];
fetch(editedLink).then(res => res.text()).then(resText => {
    let parseur = new DOMParser();
    let docc = parseur.parseFromString(resText, "text/xml");
    let vragenElementen = Array.from(docc.querySelectorAll("learningobject configuration data interactionContainer"));
    vragenElementen.forEach((vraag, i) => {
        if (vraag.querySelector("multipleChoiceContainer") != null) {
            let answElements = Array.from(vraag.querySelectorAll("multipleChoiceContainer clickableItem lexicalUnit[isCorrect=\"true\"]"));
            let finalAnswers = answElements.map(el => el.textContent);
            console.info("vraag " + (i + 1) + " is MC. antw=[" + finalAnswers.join("],[") + "]");
            vragenAntwoorden.push({ i: i, antw: "[" + finalAnswers.join("],[") + "]", type: "multiple choice vraag" });
        } else if (vraag.querySelector("textEntryInteraction") != null) {
            let finalAnswers = [];
            Array.from(vraag.querySelectorAll("textEntryItem textEntryInput correctAnswer")).forEach(correcc => { finalAnswers.push(correcc.textContent); });
            console.info("vraag " + (i + 1) + " is een invulvraag. antw=\"" + finalAnswers.join("\",\"") + "\"");
            vragenAntwoorden.push({ i: i, antw: "[" + finalAnswers.join("],[") + "]", type: "invulvraag" });
        } else if (vraag.querySelector("connectingItemsInteraction") != null) {
            let connectionRows = Array.from(vraag.querySelectorAll("connectingItemsInteraction connectingItemsContainer combinationRow"));
            let finalAnswers = [];
            connectionRows.forEach(connecc => {
                let blox = connecc.querySelectorAll("connectingElement");
                finalAnswers.push("[" + blox[0].textContent + "]  -->  [" + blox[1].textContent + "]");
            });
            console.info("vraag " + (i + 1) + " is een verbindvraag. antwoorden:\n" + finalAnswers.join("\n"));
            vragenAntwoorden.push({ i: i, antw: finalAnswers.join("\n"), type: "verbindvraag" });
        } else if (vraag.querySelector("dropdownInteraction") != null) {
            let finalAnswers = [];
            Array.from(vraag.querySelectorAll("dropdownItem dropdownBox dropOption[isCorrect=\"true\"]")).forEach(correcc => {
                finalAnswers.push(correcc.textContent);
            });
            console.info("vraag " + (i + 1) + " is een dropdown vraag. antw=\"" + finalAnswers.join("\",\"") + "\"");
            vragenAntwoorden.push({
                i: i,
                antw: finalAnswers.join("\",\""),
                type: "invulvraag"
            });
        } else {
            let antwElement = vraag.querySelector("openQuestionInteraction answer selfScoreFeedback");
            if (antwElement != null) {
                console.info("vraag " + (i + 1) + " is open vraag. antw=\"" + antwElement.textContent + "\"");
                vragenAntwoorden.push({ i: i, antw: antwElement.textContent, type: "open vraag" });
            } else {
                console.info("vraag " + (i + 1) + " heeft geen ondersteund type. sorry :(");
                vragenAntwoorden.push({ i: i, type: "onbekend" });
            }
        }
    });
    letterlijkDeOpdracht.info.hoofdstukKort = docc.querySelector("learningobject configuration data screenmetadata name").textContent;
    letterlijkDeOpdracht.info.opdrachtKort = docc.querySelector("learningobject configuration data screenmetadata shortTitle").textContent;
    letterlijkDeOpdracht.opdrachten = vragenAntwoorden;
    console.info(JSON.stringify(letterlijkDeOpdracht)); // je kan deze allicht uncommenten als je de opdrachtjson ergens voor nodig hebt :O
});


// mooimakerij:
var mooidoc = document.implementation.createHTMLDocument();
mooidoc.body.style.fontFamily = "Arial, Roboto";
mooidoc.head.innerHTML = "<meta charset=\"UTF-8\">";

vragenAntwoorden.forEach(vr => {
    let vrdiv = mooidoc.createElement("div");
    vrdiv.style.margin = "2.5rem 0";
    let vrcount = mooidoc.createElement("h1");
    vrcount.style.margin = "0 0 .5rem 0";
    vrcount.innerText = "Antwoord op vraag " + (vr.i + 1);
    vrdiv.append(vrcount);

    let vrtype = mooidoc.createElement("div");
    vrtype.style.margin = "0 0 .25rem 0";
    vrtype.innerText = "Type vraag: " + vr.type;
    vrdiv.append(vrtype);

    let vrantw = mooidoc.createElement("div");
    if (vr.antw) {
        vrantw.style.borderLeft = ".5rem solid rgb(0, 222, 0)";
        vrantw.style.backgroundColor = "hsl(0, 0%, 95%)";
        vrantw.style.padding = "1rem";
        vrantw.innerHTML = vr.antw;
    } else {
        vrantw.innerText = "Deze vraag heeft geen ondersteund antwoordtype. Sorry :(";
    }
    vrdiv.append(vrantw);

    mooidoc.body.append(vrdiv);
});

console.info(new XMLSerializer().serializeToString(mooidoc));

// gwn in de browser plakken nadat je "data:text/html," hebt getypt in de adresbalk en dan boem daar heb je je epic document